{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.6wivia",
    "title": "Uchida WIVIA R+ Receiver RESTful API",
    "description": "The API for WIVIA R+ Receiver"
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/hamersun/api.device.astrogate/1.0.5"
    },
    {
      "description": "Uchida WIVIA R+ Receiver",
      "url": "{protocol}://{environment}:{port}/api/v1",
      "variables": {
        "protocol": {
          "description": "The Data Set API is accessible via https and http",
          "enum": [
            "https",
            "http"
          ],
          "default": "https"
        },
        "environment": {
          "default": "AS201-000a",
          "enum": [
            "AS201-000a",
            "AS201-000a-staging"
          ]
        },
        "port": {
          "default": "443",
          "enum": [
            "443",
            "8443"
          ]
        }
      }
    }
  ],
  "paths": {
    "/device": {
      "get": {
        "tags": [
          "Device"
        ],
        "description": "Get the information of the device",
        "operationId": "getDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "grant the access token",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DeviceStaticInfo"
                            },
                            {
                              "$ref": "#/components/schemas/DeviceMutableInfo"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/admin/password": {
      "put": {
        "tags": [
          "Administration"
        ],
        "description": "Change the password of the account",
        "operationId": "setPassword",
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "The new password for the account.",
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]{1,16}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1004": {
                    "$ref": "#/components/examples/failed_1004"
                  },
                  "failed_1005": {
                    "$ref": "#/components/examples/failed_1005"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/admin/apikey": {
      "put": {
        "tags": [
          "Administration"
        ],
        "description": "Generate the new API Key of the account",
        "operationId": "generateApiKey",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ApiKeyInfo"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1004": {
                    "$ref": "#/components/examples/failed_1004"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/admin/configuration": {
      "get": {
        "tags": [
          "Administration"
        ],
        "description": "Get the configration file of the system",
        "operationId": "getConfigurationFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Administration"
        ],
        "description": "Import the configration file of the system",
        "operationId": "setConfigurationFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "fileName"
                ],
                "properties": {
                  "fileName": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "",
                      "model": "AS-201-U",
                      "rebootRequired": true
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/admin/firmware": {
      "get": {
        "tags": [
          "Administration"
        ],
        "description": "Get the system firmware version. If there is the parameter \"hasNew\", it would perform \"new firmware check\" and return the newer version if exist.",
        "operationId": "getFirmwareVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "hasNew",
            "in": "query",
            "description": "Is there a new firrmware available?",
            "schema": {
              "type": "boolean"
            },
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "current": {
                              "type": "string",
                              "description": "Current version",
                              "pattern": "^\\d{1,2}.\\d{1,2}.\\d{1,3}.\\d{1,3}$",
                              "example": "1.0.0.100"
                            },
                            "new": {
                              "type": "string",
                              "description": "New version. It is optional.",
                              "pattern": "^\\d{1,2}.\\d{1,2}.\\d{1,3}.\\d{1,3}$",
                              "example": "1.0.1.130"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success_0_true": {
                    "summary": "Success (hasNew=true)",
                    "value": {
                      "data": "{\"current\":\"1.2.0.106\",\"new\":\"unknown\"}",
                      "errorCode": 0,
                      "isSuccess": true,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "success_0_false": {
                    "summary": "Success (hasNew=false/no hasNew)",
                    "value": {
                      "data": "1.2.0.106",
                      "errorCode": 0,
                      "isSuccess": true,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1100": {
                    "summary": "The input value is unavailable",
                    "value": {
                      "data": "",
                      "errorCoe": 1100,
                      "errorMsg": "The input value is unavailable:  &&(hasNew)not in allow_list: [true, false]",
                      "isSuccess": false,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Administration"
        ],
        "description": "Update the system firmware. If the request contains the binary file, it indicates to perform local firmware uploading and updating. Othereise, it indicates to perform firmware upgrade from remote OTA server.",
        "operationId": "updateFirmware",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/name": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getDeviceName",
        "description": "Get the name of the device.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error. If it is successful, you can get its name from 'data' field in the response content.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/name_get_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setDeviceName",
        "description": "Set the name of the device. Only support a-z, A-Z, 0-9 and \"-\" characters and max length is 16.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "The value for the device name",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "example": "AS201-00aa"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/language": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getLanguage",
        "description": "Get language setting for the device",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": 1,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setLanguage",
        "description": "Set language for the device",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "The value for the language. There are 4 options: English(0), 正體中文(1), 简体中文(2), 日本語(3)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/logincode": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getLoginCode",
        "description": "Get login code setting for the device",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "enum": [
                                0,
                                1,
                                2
                              ],
                              "example": 1
                            },
                            "code": {
                              "type": "string",
                              "pattern": "^[0-9]{4}$",
                              "example": 1234
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": {
                        "type": 1,
                        "code": 1234
                      },
                      "model": "AS-201-U"
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setLoginCode",
        "description": "Set login code setting for the device.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "type",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "The login code type. Its value should be 0(random), 1(no code), 2(fixed).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ]
            }
          },
          {
            "name": "code",
            "in": "query",
            "style": "form",
            "description": "The login code",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{4}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/remoteview": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getRemoteViewOption",
        "description": "Get the option of remote view",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "true",
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setRemoteViewOption",
        "description": "Set the option of remote view",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "Enable or disable remote view",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/wallpaper": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getWallpaper",
        "description": "Get the current setting of wallpaper.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "0",
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/wallpaper/{id}": {
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setWallpaper",
        "description": "Set the wallpaper in the device. The image content of the first 2 positions (0 and 1) can't be replaced. For current active wallpaper, it can't be replaced.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "$ref": "#/components/parameters/idParameter"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallpaperImage": {
                    "description": "Only accept png/jpeg. Its max width shall be 3840+100 and max height is 2400+100. Besides, its width to height ratio shall be between 1.5 and 2.0 (16:10).",
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "wallpaperImage": {
                  "contentType": "image/png, image/jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "General"
        ],
        "operationId": "deleteWallpaper",
        "description": "Delete the wallpaper in the device. The image content of the first 2 positions (0 and 1) can't be deleted. For current active wallpaper, it can't be deleted.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 2,
              "maximum": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/visibility/ip": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getIPVisibility",
        "description": "Get the info whether to show IP on the standby screen?",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "true",
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setIPVisibility",
        "description": "Set whether to show IP on the standby screen",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "visible",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "Whether to show ip on the screen: true or false",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "summary": "The input value is unavailable",
                    "value": {
                      "data": "",
                      "errorCoe": 1100,
                      "errorMsg": "The input value is unavailable: &&(visible) not in allow_list: [true, false]",
                      "isSuccess": false,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/general/visibility/fixed_code": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "getFixedCodeVisibility",
        "description": "Get the info whether to show fixed login code on the standby screen?",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "true",
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "General"
        ],
        "operationId": "setFixedCodeVisibility",
        "description": "Set whether to show fixed login code on the standby screen",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "visible",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "Whether to show login code on the screen: true or false",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "summary": "The input value is unavailable",
                    "value": {
                      "data": "",
                      "errorCoe": 1100,
                      "errorMsg": "The input value is unavailable: &&(visible) not in allow_list: [true, false]",
                      "isSuccess": false,
                      "model": "AS-201-U",
                      "rebootRequired": false
                    }
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/display": {
      "post": {
        "tags": [
          "Display"
        ],
        "description": "Turn on or off display",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "true: On; false: OFF",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/display/resolution": {
      "get": {
        "tags": [
          "Display"
        ],
        "operationId": "getResolution",
        "description": "Get HDMI and VGA output resolution.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DisplaySetting"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Display"
        ],
        "operationId": "setResolution",
        "description": "Set HDMI and VGA resolution. If 'enableVGA' is true, the max resolution only could be set to 1920x1080.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "Output resolution: 0(Auto), 1(3840x2160), 2(1920x1080), 3(1280x720), 4(1024x768), 5(1920x1200). HDMI only allows 0, 1, 2, 3, 4, 5. VGA enabled allows 2, 3, 4.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "name": "enableVGA",
            "in": "query",
            "style": "form",
            "description": "Whether to enable or disable VGA: true or false",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "summary": "Success",
                    "value": {
                      "errorCode": 0,
                      "isSuccess": true,
                      "data": "",
                      "model": "AS-201-U",
                      "rebootRequired": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/time/ntp": {
      "get": {
        "tags": [
          "Time"
        ],
        "operationId": "getNTP",
        "description": "Get the network time server setting",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data"
                  ],
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "required": [
                            "auto"
                          ],
                          "properties": {
                            "auto": {
                              "type": "boolean",
                              "description": "Is auto time sync?",
                              "example": false
                            }
                          },
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DeviceAddressForm1"
                            },
                            {
                              "$ref": "#/components/schemas/DeviceAddressForm2"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "errorCode": 0,
                  "data": {
                    "auto": true,
                    "ip": "time.google.com",
                    "port": 123
                  },
                  "isSuccess": true,
                  "model": "AS-201-U"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Time"
        ],
        "operationId": "setNTP",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "ip",
            "in": "query",
            "style": "form",
            "description": "The network address of the NTP server",
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "hostname"
                },
                {
                  "format": "ipv4"
                }
              ]
            }
          },
          {
            "name": "port",
            "in": "query",
            "style": "form",
            "description": "The port number of the NTP server",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "auto",
            "in": "query",
            "style": "form",
            "description": "Whether to automatically update system time",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/time/zone": {
      "get": {
        "tags": [
          "Time"
        ],
        "operationId": "getTimezone",
        "description": "Get timezone",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "example": {
                        "errorCode": 0,
                        "data": "Asia/Taipei",
                        "isSuccess": true,
                        "model": "AS-201-U",
                        "rebootRequired": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Time"
        ],
        "operationId": "setTimezone",
        "description": "Set timezone",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "The time zone.",
            "schema": {
              "$ref": "#/components/schemas/TimeZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/time": {
      "get": {
        "tags": [
          "Time"
        ],
        "operationId": "getTime",
        "description": "Get time",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "data"
                  ],
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "YYYY:MM::DDThh:mm:ss.sTZD. Follow the RFC3339. Refer to https://tools.ietf.org/html/rfc3339#section-5.6. date-time = full-date \"T\" full-time, where full-date = date-fullyear \"-\" date-month \"-\" date-mday and full-time = partial-time time-offset.",
                          "type": "string",
                          "format": "date-time",
                          "example": "1970-01-01T10:05:08+01:00"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Time"
        ],
        "operationId": "setTime",
        "description": "Set time",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([2][0]\\d{2}-([0]\\d|[1][0-2])-([0-2]\\d|[3][0-1])T([0-1]\\d|[2][0-3]):[0-5]\\d:[0-5]\\d)$",
              "example": "2000-01-01T10:05:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/network/ethernet/macaddress": {
      "get": {
        "tags": [
          "Network"
        ],
        "operationId": "getEthernetMacAddress",
        "description": "Get the ethernet mac address",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "example": {
                        "errorCode": 0,
                        "data": "01:02:ab:ea:05:11",
                        "isSuccess": true,
                        "model": "AS-201-U",
                        "rebootRequired": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/network/ethernet": {
      "get": {
        "tags": [
          "Network"
        ],
        "operationId": "getEthernetSetting",
        "description": "Get the setting of ethernet",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EthernetSetting"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Network"
        ],
        "operationId": "setEthernetSetting",
        "description": "Set ethernet setting",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "enableDHCP",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "ipv4"
            }
          },
          {
            "name": "mask",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "ipv4"
            }
          },
          {
            "name": "gateway",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "ipv4"
            }
          },
          {
            "name": "dns1",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "ipv4"
            }
          },
          {
            "name": "dns2",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "ipv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/network/wifi/macaddress": {
      "get": {
        "tags": [
          "Network"
        ],
        "operationId": "getWiFiMacAddress",
        "description": "Get the WiFi mac address",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/network/wifi": {
      "get": {
        "tags": [
          "Network"
        ],
        "operationId": "getWiFiSetting",
        "description": "Get the setting of WiFi",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WifiSetting"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Network"
        ],
        "operationId": "setWiFiSetting",
        "description": "Set WiFi AP mode",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "mode",
            "in": "query",
            "style": "form",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AP",
                "OFF"
              ]
            }
          },
          {
            "name": "hideSSID",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "security",
            "in": "query",
            "style": "form",
            "description": "The security mode. 0 indicates non; 1 indicates WPA2-PSK",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "password",
            "in": "query",
            "style": "form",
            "description": "The authorized password of WPA2",
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]{8,16}$"
            }
          },
          {
            "name": "band",
            "in": "query",
            "style": "form",
            "description": "802.11 freqency band. 0: 2.4GHz; 1: 5GHz",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "networking_mode",
            "in": "query",
            "style": "form",
            "description": "0(NAT), 1(Bridge)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "gatekeeper",
            "in": "query",
            "style": "form",
            "description": "0(Allow All), 1(Internet Only), 2(Block All)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/power/mode": {
      "get": {
        "tags": [
          "Power"
        ],
        "operationId": "getPowerButtonBehavior",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PowerSetting"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Power"
        ],
        "operationId": "setPowerButtonBehavior",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "mode",
            "in": "query",
            "style": "form",
            "required": true,
            "description": "power button behavior. 0(sleep mode); 1(suspend mode). If 1(suspend mode) is set, the timeout would be ignored.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "style": "form",
            "description": "How long to go to sleep mode if there are no opertions. Its time unit is minute. -1 indicates never. If mode is set to 0 (sleep), the timeout parameter is must.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                5,
                15,
                30,
                60,
                -1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    },
    "/device/power/reboot": {
      "post": {
        "tags": [
          "Power"
        ],
        "operationId": "rebootSystem",
        "description": "Perform system reboot.",
        "parameters": [
          {
            "$ref": "#/components/parameters/userParameter"
          },
          {
            "name": "delay",
            "in": "query",
            "style": "form",
            "description": "Delay interval in minutes (optional) to perform system reboot. If you do not specify delay, then the reboot would start immediately.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "reason",
            "in": "query",
            "style": "form",
            "description": "Reason for performing reboot (optional).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request URL is valid and handled. Whether it is successful, you need to check the 'errorCode' of JSON-style string in the response content. 0 indicates success; otherwise, it is error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success_0": {
                    "$ref": "#/components/examples/default_put_success_response"
                  },
                  "failed_1000": {
                    "$ref": "#/components/examples/failed_1000"
                  },
                  "failed_1001": {
                    "$ref": "#/components/examples/failed_1001"
                  },
                  "failed_1002": {
                    "$ref": "#/components/examples/failed_1002"
                  },
                  "failed_1003": {
                    "$ref": "#/components/examples/failed_1003"
                  },
                  "failed_1100": {
                    "$ref": "#/components/examples/failed_1100"
                  },
                  "failed_1200": {
                    "$ref": "#/components/examples/failed_1200"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ApiErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GeneralResponse": {
        "type": "object",
        "required": [
          "errorCode",
          "data",
          "isSuccess",
          "model",
          "rebootRequired"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorCode"
          },
          {
            "type": "object",
            "properties": {
              "errorMsg": {
                "type": "string",
                "example": ""
              },
              "data": {
                "type": "string",
                "example": "",
                "description": "It can be a JSON-style string. For POST or PUT methods, data would be empty."
              },
              "isSuccess": {
                "type": "boolean",
                "example": true
              },
              "model": {
                "type": "string",
                "example": "AS-201-U"
              },
              "rebootRequired": {
                "type": "boolean",
                "example": false,
                "description": "The device needs to reboot to apply this new change."
              }
            }
          }
        ]
      },
      "HTTPErrorResponse": {
        "type": "object",
        "required": [
          "errorCode",
          "data",
          "isSuccess",
          "model",
          "rebootRequired"
        ],
        "properties": {
          "errorCode": {
            "description": "It would be the same as HTTP Status Code.",
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "example": ""
          },
          "isSuccess": {
            "type": "boolean",
            "example": false
          },
          "model": {
            "type": "string"
          },
          "rebootRequired": {
            "type": "boolean",
            "example": false,
            "description": "The device needs to reboot to apply this new change."
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "pattern": "^[A-Za-z0-9]{16}$",
            "example": "zxcvfdsa1234rewq"
          },
          "expiredTime": {
            "description": "Epoch time; It is the number of seconds that have elapsed since the Unix epoch, minus leap seconds; the Unix epoch is 00:00:00 UTC on 1 January 1970. -1 indicates never.",
            "type": "integer",
            "format": "int64",
            "example": 1632848626
          },
          "scope": {
            "type": "string",
            "enum": [
              "full",
              "view_only"
            ],
            "example": "full"
          }
        }
      },
      "ApiKeyInfo": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "pattern": "^[A-Za-z0-9]{16}$",
            "example": "zxcvfdsa1234rewq"
          },
          "expiredTime": {
            "type": "integer",
            "format": "int64",
            "description": "Epoch time; It is the number of seconds that have elapsed since the Unix epoch, minus leap seconds; the Unix epoch is 00:00:00 UTC on 1 January 1970. -1 indicates never.",
            "example": 1632848626
          },
          "scope": {
            "type": "string",
            "enum": [
              "full",
              "view_only"
            ],
            "example": "full"
          }
        }
      },
      "FileDescription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "wallpaper",
              "firmware",
              "application",
              "text"
            ]
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string"
          },
          "security": {
            "type": "boolean",
            "description": "Is the file confidential?",
            "example": false
          }
        }
      },
      "DeviceStaticInfo": {
        "type": "object",
        "required": [
          "sn",
          "model",
          "ethMacAddress"
        ],
        "properties": {
          "sn": {
            "type": "string",
            "example": "AS201WW123455555"
          },
          "model": {
            "type": "string",
            "example": "AS-201-U"
          },
          "ethMacAddress": {
            "type": "string",
            "pattern": "^([0-9a-f]{2}:){5}([0-9a-f]{2})$",
            "example": "01:02:a1:bc:12:dd"
          }
        }
      },
      "DeviceMutableInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[A-Za-z\\d\\-]{1,16}$",
            "maxLength": 16,
            "minLength": 1,
            "example": "AS201-00aa"
          },
          "fwVersion": {
            "description": "major.minor.patch.build",
            "type": "string",
            "pattern": "^\\d{1,2}.\\d{1,2}.\\d{1,3}.\\d{1,3}$",
            "example": "1.0.3.123"
          },
          "uptime": {
            "description": "uptime in seconds after booting up.",
            "type": "integer",
            "format": "int64",
            "example": 5555
          },
          "status": {
            "type": "string",
            "description": "defined status: offline, standby, connected, sharing, sleeping, updating. The field may contains multiple status which would be separated by \",\".",
            "example": "online"
          }
        }
      },
      "GeneralSetting": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[A-Za-z\\d\\-]{1,16}$",
            "example": "AS201-00aa"
          },
          "language": {
            "type": "integer",
            "format": "int32",
            "description": "The value for the language. There are 3 options: English(0), 正體中文(1), 简体中文(2)",
            "enum": [
              0,
              1,
              2
            ],
            "example": 0
          },
          "loginCodeType": {
            "description": "0(random), 1(no code), 2(fixed)",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "example": 1
          },
          "loginCode": {
            "type": "string",
            "pattern": "^[0-9]{4}$",
            "example": 1234
          },
          "allowRemoteView": {
            "type": "boolean",
            "example": true
          },
          "wallpapers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackgroundImage"
            }
          }
        }
      },
      "Wallpaper": {
        "$ref": "#/components/schemas/BackgroundImage"
      },
      "BackgroundImage": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The index of background image files in the device. Its index starts from 0 to 5.",
            "minimum": 0,
            "maximum": 5,
            "example": 3
          },
          "image": {
            "description": "The thumbnail of the image or the uuid of the image stored on the file server.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BackgroundImageUrl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The index of background image files in the device. Its index starts from 0 to 5.",
            "minimum": 0,
            "maximum": 5,
            "example": 3
          },
          "path": {
            "type": "string",
            "format": "uri",
            "description": "The downloded url of the specified background image file."
          }
        },
        "additionalProperties": false
      },
      "DisplaySetting": {
        "type": "object",
        "properties": {
          "hdmi": {
            "$ref": "#/components/schemas/HDMISetting"
          },
          "vga": {
            "$ref": "#/components/schemas/VGASetting"
          }
        }
      },
      "HDMISetting": {
        "type": "object",
        "properties": {
          "resolution": {
            "type": "integer",
            "format": "int32",
            "description": "-1(Not Connected or undefined resolution), 0(Auto), 1(3840x2160), 2(1920x1080), 3(1280x720), 4(1024x768), 5(1920x1200)",
            "enum": [
              -1,
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "example": 0
          },
          "cec": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "VGASetting": {
        "type": "object",
        "properties": {
          "resolution": {
            "type": "integer",
            "format": "int32",
            "description": "-1(Not Connected or undefined resolution), 2(1920x1080), 3(1280x720), 4(1024x768)",
            "enum": [
              -1,
              2,
              3,
              4
            ],
            "example": 2
          },
          "enable": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "TimeSetting": {
        "type": "object",
        "properties": {
          "time": {
            "description": "YYYY:MM::DDThh:mm:ss.sTZD. Follow the RFC3339. Refer to https://tools.ietf.org/html/rfc3339#section-5.6. date-time = full-date \"T\" full-time, where full-date = date-fullyear \"-\" date-month \"-\" date-mday and full-time = partial-time time-offset.",
            "type": "string",
            "format": "date-time",
            "example": "1970-01-01T10:05:08+01:00"
          },
          "clockFormatIn24hr": {
            "type": "boolean"
          },
          "zone": {
            "description": "time zone. You can refer to https://github.com/unicode-org/cldr/blob/latest/common/bcp47/timezone.xml",
            "type": "string",
            "example": "Asia/Taipei"
          },
          "ntp": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeviceAddressForm1"
              },
              {
                "$ref": "#/components/schemas/DeviceAddressForm2"
              }
            ],
            "example": [
              {
                "ip": "time.stdtime.gov.tw",
                "port": 123
              },
              {
                "ip": "216.239.35.42",
                "port": 123
              }
            ]
          },
          "autoSync": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "DeviceAddressForm1": {
        "type": "object",
        "required": [
          "ip",
          "port"
        ],
        "properties": {
          "ip": {
            "description": "hostname",
            "type": "string",
            "format": "hostname",
            "example": "time.stdtime.gov.tw"
          },
          "port": {
            "description": "port number",
            "type": "integer",
            "format": "int32",
            "maximum": 65535,
            "example": 123
          }
        }
      },
      "DeviceAddressForm2": {
        "type": "object",
        "required": [
          "ip",
          "port"
        ],
        "properties": {
          "ip": {
            "description": "IP",
            "type": "string",
            "format": "ipv4",
            "example": "216.239.35.4"
          },
          "port": {
            "description": "port number",
            "type": "integer",
            "format": "int32",
            "maximum": 65535,
            "example": 123
          }
        }
      },
      "NetworkSetting": {
        "type": "object",
        "properties": {
          "wifi": {
            "$ref": "#/components/schemas/WifiSetting"
          },
          "ethernet": {
            "$ref": "#/components/schemas/EthernetSetting"
          }
        }
      },
      "WifiSetting": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "AP",
              "STA",
              "OFF"
            ],
            "example": "AP"
          },
          "ssid": {
            "type": "string",
            "pattern": "^[A-Za-z\\d\\-]{1,16}$",
            "example": "AS201-00aa"
          },
          "hideSSID": {
            "type": "boolean",
            "example": false
          },
          "security": {
            "description": "wireless authentication method. 0(none), 1(WPA2-PSK)",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ],
            "example": 0
          },
          "password": {
            "description": "The authorized password of WPA2",
            "type": "string",
            "pattern": "^[A-Za-z0-9]{8,16}$",
            "example": 12345678
          },
          "band": {
            "description": "802.11 freqency band. 1: 2.4GHz; 1: 5GHz",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ],
            "example": 1
          },
          "networking_mode": {
            "description": "The networking mode: 0(NAT), 1(Bridge)",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ],
            "example": 0
          },
          "gatekeeper": {
            "description": "The rule of gatekeeper: 0(Allow All), 1(Internet Only), 2(Block All)",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ],
            "example": 0
          }
        }
      },
      "EthernetSetting": {
        "type": "object",
        "required": [
          "enableDHCP"
        ],
        "properties": {
          "enableDHCP": {
            "type": "boolean",
            "example": true
          },
          "setting": {
            "$ref": "#/components/schemas/StaticIPConfiguration"
          }
        }
      },
      "StaticIPConfiguration": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "format": "ipv4",
            "example": "192.168.1.123"
          },
          "mask": {
            "type": "string",
            "format": "ipv4",
            "example": "255.255.255.0"
          },
          "gateway": {
            "type": "string",
            "format": "ipv4",
            "example": "192.168.1.1"
          },
          "dns1": {
            "type": "string",
            "format": "ipv4",
            "example": "192.168.1.1"
          },
          "dns2": {
            "type": "string",
            "format": "ipv4",
            "example": "8.8.8.8"
          }
        }
      },
      "PowerSetting": {
        "type": "object",
        "properties": {
          "mode": {
            "description": "power button behavior. 0(sleep mode), 1(suspend mode)",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ],
            "example": 0
          },
          "timeout": {
            "description": "how long to go to sleep mode if there are no opertions. Its time unit is minute. -1 indicates never",
            "type": "integer",
            "format": "int32",
            "enum": [
              5,
              15,
              30,
              60,
              -1
            ],
            "example": 30
          }
        }
      },
      "TimeZone": {
        "type": "string",
        "enum": [
          "Pacific/Midway",
          "Pacific/Honolulu",
          "America/Anchorage",
          "America/Los_Angeles",
          "America/Tijuana",
          "America/Phoenix",
          "America/Chihuahua",
          "America/Denver",
          "America/Costa_Rica",
          "America/Regina",
          "America/Chicago",
          "America/Mexico_City",
          "America/Bogota",
          "America/New_York",
          "America/Caracas",
          "America/Barbados",
          "America/Manaus",
          "America/Santiago",
          "America/Halifax",
          "America/Recife",
          "America/Sao_Paulo",
          "America/Argentina/Buenos_Aires",
          "America/Montevideo",
          "America/St_Johns",
          "Atlantic/South_Georgia",
          "Atlantic/Cape_Verde",
          "America/Godthab",
          "Atlantic/Azores",
          "Africa/Casablanca",
          "Europe/London",
          "Africa/Brazzaville",
          "Europe/Amsterdam",
          "Europe/Belgrade",
          "Europe/Brussels",
          "Europe/Madrid",
          "Europe/Sarajevo",
          "Africa/Windhoek",
          "Africa/Cairo",
          "Africa/Harare",
          "Asia/Amman",
          "Europe/Athens",
          "Europe/Istanbul",
          "Asia/Beirut",
          "Europe/Helsinki",
          "Asia/Jerusalem",
          "Europe/Minsk",
          "Asia/Baghdad",
          "Europe/Moscow",
          "Asia/Kuwait",
          "Africa/Nairobi",
          "Asia/Baku",
          "Asia/Tbilisi",
          "Asia/Yerevan",
          "Asia/Dubai",
          "Asia/Tehran",
          "Asia/Kabul",
          "Asia/Karachi",
          "Asia/Oral",
          "Asia/Yekaterinburg",
          "Asia/Kolkata",
          "Asia/Colombo",
          "Asia/Kathmandu",
          "Asia/Almaty",
          "Asia/Yangon",
          "Asia/Krasnoyarsk",
          "Asia/Bangkok",
          "Asia/Jakarta",
          "Asia/Shanghai",
          "Asia/Hong_Kong",
          "Asia/Irkutsk",
          "Asia/Kuala_Lumpur",
          "Australia/Perth",
          "Asia/Taipei",
          "Asia/Seoul",
          "Asia/Tokyo",
          "Asia/Yakutsk",
          "Australia/Adelaide",
          "Australia/Darwin",
          "Australia/Brisbane",
          "Australia/Hobart",
          "Australia/Sydney",
          "Asia/Vladivostok",
          "Pacific/Guam",
          "Asia/Magadan",
          "Pacific/Noumea",
          "Pacific/Majuro",
          "Pacific/Auckland",
          "Pacific/Fiji",
          "Pacific/Tongatapu"
        ],
        "example": "Asia/Taipei"
      },
      "ErrorCode": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1100,
              1200
            ],
            "x-enum-descriptions": [
              "0,Success",
              "1000,Fail",
              "1001,User or APP Key is unavailable",
              "1002,API internal exception",
              "1003,Lack parameter",
              "1004,Basic Auth or APP Key is unavailable",
              "1005,User or password is unavailable",
              "1100,The input value is unavailable",
              "1200,The input file is unavailable"
            ],
            "example": 0
          }
        }
      }
    },
    "responses": {
      "ApiResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            },
            "example": {
              "errorCode": 0,
              "data": "",
              "isSuccess": true,
              "model": "AS-201-U",
              "rebootRequired": false
            }
          }
        }
      },
      "ApiErrorResponse": {
        "description": "HTTP ERROR (4xx or 5xx). The request URL is invalid or its method is not supported or there is no response for the service.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPErrorResponse"
            },
            "example": {
              "errorCode": 404,
              "errorMsg": "Not Found",
              "data": "",
              "isSuccess": false,
              "model": "AS-201-U",
              "rebootRequired": false
            }
          }
        }
      },
      "BadRequest": {
        "description": "The requested url is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable ",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      },
      "DefaultError": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "uuidParameter": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "0729a580-2240-11e6-9eb5-0002a5d5c51b"
        }
      },
      "idParameter": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "maximum": 5
        }
      },
      "userParameter": {
        "name": "username",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pwdParameter": {
        "name": "password",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "examples": {
      "login_post_success_response": {
        "summary": "Success",
        "value": {
          "errorCode": 0,
          "isSuccess": true,
          "model": "AS-201-U",
          "data": {
            "token": "asdfzxcv1234qwer",
            "expiredTime": 1632847374,
            "scope": "full"
          }
        }
      },
      "name_get_success_response": {
        "summary": "Success",
        "value": {
          "errorCode": 0,
          "isSuccess": true,
          "data": "AS201-00aa",
          "model": "AS-201-U"
        }
      },
      "default_put_success_response": {
        "summary": "Success",
        "value": {
          "errorCode": 0,
          "data": "",
          "isSuccess": true,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1000": {
        "summary": "Failed",
        "value": {
          "errorCode": 1000,
          "errorMsg": "Failed.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1001": {
        "summary": "User or APP Key is unavailable",
        "value": {
          "errorCode": 1001,
          "errorMsg": "User or APP Key is unavailable.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1002": {
        "summary": "API internal exception",
        "value": {
          "errorCode": 1002,
          "errorMsg": "API internal exception.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1003": {
        "summary": "Lack parameter",
        "value": {
          "errorCode": 1003,
          "errorMsg": "Lack parameter.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1004": {
        "summary": "Basic Auth or APP Key is unavailable",
        "value": {
          "errorCode": 1004,
          "errorMsg": "Basic Auth or APP Key is unavailable.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1005": {
        "summary": "User or password is unavailable",
        "value": {
          "errorCode": 1005,
          "errorMsg": "User or password is unavailable.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1100": {
        "summary": "The input value is unavailable",
        "value": {
          "errorCode": 1100,
          "errorMsg": "The input value is unavailable.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      },
      "failed_1200": {
        "summary": "The input file format is unavailable",
        "value": {
          "errorCoe": 1200,
          "errorMsg": "The input file format is unavailable.",
          "data": "",
          "isSuccess": false,
          "model": "AS-201-U",
          "rebootRequired": false
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "The API Key for issuing a RESTful API request.",
        "in": "header",
        "name": "X-API-KEY"
      },
      "BasicAuth": {
        "description": "Basic HTTP security authentication. Allowed headers: 'Authorization: Basic <api_key>' or 'Authorization: Basic XXXXXX', where XXXXX is the base64 encoded string of username:password.",
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}